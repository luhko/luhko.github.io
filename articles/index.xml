<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Articles on Luhko</title>
    <link>https://luhko.github.io/articles/</link>
    <description>Recent content in Articles on Luhko</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 17 Dec 2023 21:44:49 +0200</lastBuildDate><atom:link href="https://luhko.github.io/articles/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dynamic analysis of malwares with API Monitor</title>
      <link>https://luhko.github.io/articles/dynamic_analysis_malwares_api_monitor/</link>
      <pubDate>Sun, 17 Dec 2023 21:44:49 +0200</pubDate>
      
      <guid>https://luhko.github.io/articles/dynamic_analysis_malwares_api_monitor/</guid>
      <description>This blog post aims to show how you can dynamically analyse Windows malwares using API Monitor.
One of the great benefits is that you can take a look at each API calls. You can even breakpoint on them, and edit the value before and after the call.
Custom malware For learning purpose, we will write a basic Windows malware which will:
 Check the presence of a hardcoded registry key. If not present, the execution is stopped.</description>
    </item>
    
    <item>
      <title>PNG files : structure and Steganography</title>
      <link>https://luhko.github.io/articles/png_struct_stegano/</link>
      <pubDate>Thu, 04 Aug 2022 19:44:49 +0200</pubDate>
      
      <guid>https://luhko.github.io/articles/png_struct_stegano/</guid>
      <description>In this article, we will have a quick overview of the PNG file structure and some Steganography technics used. PNG Steganography is often used for CTF, so I hope this article will be helpful :)
PNG file structure Chunks A PNG is composed of chunks. Each chunk contains four parts:
 Length (4 bytes): indicate the number of bytes in the chunkâ€™s data field (ignoring himself, chunk type and CRC) Chunk type (4 bytes): indicate the chunk type, limited to ASCII letters Chunk data (length depends of the chunk type): the size can be from 0 to (2^31)-1 bytes CRC(4 bytes): calculated using the chunk type and data.</description>
    </item>
    
  </channel>
</rss>
